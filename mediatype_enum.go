// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package main

import (
	"fmt"
)

const (
	// MediaTypeVideo is a MediaType of type Video.
	// filetypes such as mp4,mov,etc
	MediaTypeVideo MediaType = iota
	// MediaTypeImage is a MediaType of type Image.
	// filetypes such as png,jpg,etc
	MediaTypeImage
	// MediaTypeOther is a MediaType of type Other.
	// all other filetypes that aren't the above. shouldn't be explicitely parsed.
	MediaTypeOther
)

const _MediaTypeName = "videoimageother"

var _MediaTypeMap = map[MediaType]string{
	MediaTypeVideo: _MediaTypeName[0:5],
	MediaTypeImage: _MediaTypeName[5:10],
	MediaTypeOther: _MediaTypeName[10:15],
}

// String implements the Stringer interface.
func (x MediaType) String() string {
	if str, ok := _MediaTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("MediaType(%d)", x)
}

var _MediaTypeValue = map[string]MediaType{
	_MediaTypeName[0:5]:   MediaTypeVideo,
	_MediaTypeName[5:10]:  MediaTypeImage,
	_MediaTypeName[10:15]: MediaTypeOther,
}

// ParseMediaType attempts to convert a string to a MediaType.
func ParseMediaType(name string) (MediaType, error) {
	if x, ok := _MediaTypeValue[name]; ok {
		return x, nil
	}
	return MediaType(0), fmt.Errorf("%s is not a valid MediaType", name)
}
